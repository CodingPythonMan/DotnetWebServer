<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.studentdao.StudentDao">

	<resultMap type="com.spring.studentvo.StudentVO" id="studentVO">
		<result property="no" column="no" />
		<result property="sd_num" column="sd_num" />
		<result property="sd_name" column="sd_name" />
		<result property="sd_id" column="sd_id" />
		<result property="sd_passwd" column="sd_passwd" />
		<result property="s_num" column="s_num" />
		<result property="sd_birthday" column="sd_birthday" />
		<result property="sd_phone" column="sd_phone" />
		<result property="sd_address" column="sd_address" />
		<result property="sd_email" column="sd_email" />
		<result property="sd_date" column="sd_date" />
	</resultMap>

	<select id="listStudent" parameterType="com.spring.studentvo.StudentVO" resultMap="studentVO">
		SELECT
		no, sd_num, sd_name, sd_id, sd_passwd, s_num, sd_birthday, sd_phone,
		sd_address, sd_email, sd_date
		FROM student
		<where>
			<if test="sd_name != null and sd_name !=''">
				sd_name like '%' || #{sd_name} || '%'
			</if>
		</where>
		order by no asc
	</select>
	
	<select id="studentCount" parameterType="java.lang.String" resultType="java.lang.String">
		select lpad(count(*)+1, 4, '0') as studentCount
		from student
		where s_num = #{s_num}
	</select>
	
	<select id="idCheck" parameterType="java.lang.String" resultMap="studentVO">
		select sd_id
		from student
		where sd_id = #{id}
	</select>
	
	<select id="pwCheck" parameterType="com.spring.studentvo.StudentVO" resultType="int">
		select nvl((
			select 1 from student
		))
		from dual
	</select>

	<!--
	<insert id="insertSubject" parameterType="com.spring.subjectvo.SubjectVO">
		INSERT INTO subject (no, s_num, s_name)
		VALUES(subject_seq.nextval,#{s_num},#{s_name})
	</insert>
	
	<update id="updateSubject" parameterType="com.spring.subjectvo.SubjectVO">
		update subject 
		set
		s_num=#{s_num}, s_name=#{s_name}
		where no = #{no}
	</update>-->
	
	<!--	
	<delete id="deleteSomething" parameterType="int">
		DELETE FROM tablename1 WHERE
		columnname1 = #{param1}
	</delete>
	-->
</mapper>
